---

---

<div id="product-container" class="product-list">
    <div class="no-products">
        <h3>Loading products...</h3>
    </div>
</div>

<style>
    /* Container for the entire product list */
    #product-container {
        display: flex;
        flex-direction: column;
        gap: 20px;
        padding: 20px;
        max-width: 1000px;
        margin: 0 auto;
    }

    /* Each user's container */
    #each-user {
        background-color: #f9f9f9;
        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
        padding: 20px;
        transition:
            transform 0.3s ease,
            box-shadow 0.3s ease;
    }

    /* Hover effect for each user card */
    #each-user:hover {
        transform: translateY(-5px);
        box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
    }

    /* Username styling */
    #each-user h4 {
        font-size: 1.5rem;
        color: #333;
        margin-bottom: 10px;
    }

    /* Product list styling */
    #each-user ul {
        list-style: none;
        padding-left: 0;
        margin: 0;
    }

    /* Each product item */
    #each-user li {
        background-color: #fff;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
        box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    /* Styling for individual product info */
    #each-user li span {
        display: block;
        font-size: 1rem;
        color: #555;
    }

    /* No products found message styling */
    .no-products {
        text-align: center;
        color: #888;
        font-size: 1.2rem;
    }

    /* Responsive design */
    @media (max-width: 768px) {
        #product-container {
            max-width: 100%;
            padding: 10px;
        }

        #each-user {
            padding: 15px;
        }

        #each-user h4 {
            font-size: 1.2rem;
        }

        #each-user li {
            padding: 8px;
        }
    }
</style>
<script is:inline src="http://localhost:3000/socket.io/socket.io.js"></script>
<script>
    import { io } from "socket.io-client";
    import type { tokenToString } from "typescript";
    const api = import.meta.env.PUBLIC_API;
    const domain = import.meta.env.DOMAIN;

    const getCookie = (name) => {
        const cookies = document.cookie.split("; ");
        console.log(name,cookies)
        for (let cookie of cookies) {
            console.log('cookie in for is', cookie)
            const [cookieName, cookieValue] = cookie.split("=");
            if (cookieName === name) {
                return cookieValue;
            }
        }
        return null;
    };

    function socketRequest() {
        const adminAccessToken = getCookie("admin_access_token");
        const socket = io("http://localhost:3000", {
            transports: ["websocket"],
            extraHeaders: {
                Authorization: `Bearer ${adminAccessToken}`, // Send token in headers
            },
            withCredentials: true,
        });

        socket.emit("request-cart-data");

        socket.on("cart-data", (data) => {
            const cartItems = data.cartItems;
            console.log("data recieved");
            listCartItems(cartItems);
        });

        socket.on("cart-update", () => {
            console.log("cart has been updated");
            socket.emit("request-cart-data");
        });

        socket.on("connect_error", (error) => {
            console.error("Connection Error:", error.message);
            if (error.message === "Authentication error") {
                alert(
                    "You are not authorized to access this data. Please log in.",
                );
                window.location.href = "/admin_login";
            }
        });
    }

    function listCartItems(list) {
        const container = document.getElementById("product-container");

        if (list.length === 0) {
            container.innerHTML = `
            <div class="no-products">
                <h3>No products available.</h3>
            </div>
        `;
            return; // Exit if there are no products
        }

        container.innerHTML = list
            .map(
                (user) => `
        <div id="each-user">
            <h2>${user.username}</h2>
            <ul>
                ${
                    Array.isArray(user.cartItems) && user.cartItems.length > 0
                        ? user.cartItems
                              .map(
                                  (product) => `
                        <li>
                            Product Id: ${product.productId} | Product Name: ${product.productName} | Price: ${product.price} | Quantity : ${product.quantity}
                        </li>
                    `,
                              )
                              .join("")
                        : "<li>No products found for this user.</li>"
                }
            </ul>
        </div> 
    `,
            )
            .join("");
    }

    document.addEventListener("DOMContentLoaded", () => {
        socketRequest();
    });
</script>
